@* IEnumerable have a method to get the next item in the collection, so they look at items “one at a time”, they don’t need the whole collection to be in memory and don’t know how many items are in it, foreach just keeps getting the next item until it runs out. *@

@model IEnumerable<MyShop.Core.Models.ProductCategory>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Category)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>
